AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  TableName:
    Type: String
    Default: 'websocket_test'
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
  VoteTableName:
    Type: String
    Default: 'vote-table'
Resources:
  WebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.message"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join ["/", [integrations, !Ref ConnectInteg]]
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocket
      IntegrationType: AWS_PROXY
      IntegrationUri:
        !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join ["/", [integrations, !Ref DisconnectInteg]]
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebSocket
      IntegrationType: AWS_PROXY
      IntegrationUri:
        !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref WebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Test
      DeploymentId: !Ref Deployment
      ApiId: !Ref WebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableName
  VoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "vote_for"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "vote_for"
          KeyType: "HASH"
      BillingMode: "PAY_PER_REQUEST"
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: vote-table
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs8.10
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocket
      - OnConnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs8.10
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - WebSocket
      - OnDisconnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  SendMessageFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - VoteTable
    Properties:
      CodeUri: sendmessage/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs8.10
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          END_POINT: !Join [ '', [ !Ref WebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]
      Events:
        VoteStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt VoteTable.StreamArn
            StartingPosition: LATEST
            BatchSize: 10
            Enabled: true
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref TableName
      - DynamoDBStreamReadPolicy:
          TableName: !Ref VoteTableName
          StreamName: !GetAtt VoteTable.StreamArn
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebSocket}/*'
Outputs:
  WebSocketURI:
    Value: !Join [ '', [ 'wss://', !Ref WebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]

